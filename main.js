// Voc√™ pode apresentar o resultado tanto no **console** quanto em um **alerta** no navegador.
// 1. Crie um script que exiba a mensagem "Hello World!" em um alerta no navegador.
console.log("Hello World!");
alert("Hello World!");
// 2. Crie um script que declare duas vari√°veis e exiba o resultado da soma entre elas.
var numberOn = 10;
var numberTwo = 10;
var soma = numberOn + numberTwo
console.log(`A soma de ${numberOn} + ${numberTwo} = `, numberOn + numberTwo);
alert(`A soma de ${numberOn} + ${numberTwo} = ${soma}`);
// 3. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um n√∫mero. Se for, exiba a mensagem "√â um n√∫mero", caso contr√°rio, exiba a mensagem "N√£o √© um n√∫mero".

// üí°¬†Para saber o tipo de dado voc√™ pode usar o operador `typeof`
// 
var number = 10

// if (typeof number == 'number') {
// 	console.log('√© um n√∫mero')
//   alert('√â um n√∫mero')
// } else {
// 	console.log('n√£o √© um n√∫mero')
//   alert('N√£o √© um n√∫mero')
// }

typeof number == 'number' ? alert('√â um n√∫mero') : alert('N√£o √© um n√∫mero')

// 4. Crie um script que declare uma vari√°vel e verifique se o seu valor √© uma string. Se for, exiba a mensagem "√â uma string", caso contr√°rio, exiba a mensagem "N√£o √© uma string".
const string = "isso √© uma string"

typeof string == 'string' ? alert('√â uma string') : alert('N√£o √© uma string')

// if (typeof number == 'string') {
// 	console.log('√© um string')
//   alert('√â um string')
// } else {
// 	console.log('n√£o √© um string')
//   alert('N√£o √© um string')
// }

// 6. Crie um script que declare duas vari√°veis e exiba o resultado da subtra√ß√£o entre elas.
const numberSubOn = 20;
const numberSubTwo = 10;

const sub = numberSubOn - numberSubTwo;

alert(`Subtra√ß√£o: ${sub}`);

// 5. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um booleano. Se for, exiba a mensagem "√â um booleano", caso contr√°rio, exiba a mensagem "N√£o √© um booleano".
const booleano = true;

typeof booleano == 'boolean' ? alert('√â um booleano') : alert('N√£o √© um booleano');

// 7. Crie um script que declare duas vari√°veis e exiba o resultado da multiplica√ß√£o entre elas.
const numberMultiplicateOn = 2;
const numberMultiplicateTwo = 10;

const multiplicate = numberMultiplicateOn * numberMultiplicateTwo;

alert(`Multiplica√ß√£o: ${multiplicate}`);

// 8. Crie um script que declare duas vari√°veis e exiba o resultado da divis√£o entre elas.
const numberDivisionOn = 10;
const numberDivisionTwo = 2;

const division = numberDivisionOn / numberDivisionTwo;

alert(`Divis√£o: ${division}`);

// 9. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um n√∫mero par. Se for, exiba a mensagem "√â um n√∫mero par",
// caso contr√°rio, exiba a mensagem "N√£o √© um n√∫mero par".

const numberEven = 4

numberEven % 2 == 0 ? alert('√â um n√∫mero par') : alert('N√£o √© um n√∫mero par');

// 10. Crie um script que declare uma vari√°vel e verifique se o seu valor √© um n√∫mero √≠mpar. Se for, exiba a mensagem "√â um n√∫mero √≠mpar", 
// caso contr√°rio, exiba a mensagem "N√£o √© um n√∫mero √≠mpar".

const numberOdd = 5

numberOdd % 2 != 0 ? alert('√â um n√∫mero impar') : alert('N√£o √© um n√∫mero impar');
